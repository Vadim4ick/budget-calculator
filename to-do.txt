1) Пишем модуль для подстановки тестовых данных в форму, чтобы не заоплнять ее каждый раз вручную для тестирования

4. УРОК. Правки контроллера. Прослушка событий в отдельной функции

1) В контроллере создаем отдельную функцию setupEventListeners по прослушке событий и запуску других функций
2) Возвращаем ее через return как метод init и далее запускаем его от контроллера
3) Запускаем controller.init();

5. УРОК. Структура данных в модели

1) Создали структуру данных в модели
2) объект data под данные приложения
3) функции конструкторы под создание раходов и доходов

6. УРОК. Добавление записей в модель

1) В модели создаем ф-ю для создания новых "записей" addItem()
2) Она заполняет нашу структуру данных, расходом или доходом
3) По type определяем тип записи +/-, рассчитываем ID
4) В контроллере делаем пункт 2, добавляем полученные данные из input в модель

7. УРОК. Вывод записей в разметку

1) Начинаем работать с отображением заисей в таблицах
2) В UI выносим ф-ю getInput из return
3) В UI добавляем метод который будет добавлять новую запись в разметку
4) Вызываем этот метод в контроллере в 3-ем пункте
5) Оборачиваю тестовые функции в модуль и ивызываю его init после добавления дагнных в контроллере

8. УРОК. Очистка полей формы после ввода

1) В view создание функции clearFields для очистки полей формы
2) Запуск ф-ии clearFields в контроллере после добавления новых данных

9. УРОК. Проверка на пустые поля

1) Правим контроллер добавляя условие на непустые поля

--------------------------------- 1-я часть готова! ------------------------------------

----------------------------------------------
10. УРОК - КОНТРОЛЛЕР И МОДЕЛЬ. Расчет общих доходов, расходов и % общих расходов от доходов.
----------------------------------------------

1) Создадим заготовку для ф-ии updateBudget в контроллере
2) Поставим ее выход в добавление новой записи
3) В Модели создаем calculateBudget() в ней считаем все доходы, все расходы, общий бюджет % и записываем их в data объект
4) Создаем ф-ю calculateTotalSum которая будет возвращать сумму для расходов и доходов
5) Вношу правки в Модель в добавление новых пунктов parseFloat(value)
6) В объекте data добавляем поля для budget и percentage
7) В calculateBudget рассчитываем бюджет и % и записываем их в data

----------------------------------------------
11. УРОК - Обновление бюджета в UI
----------------------------------------------

1) Найдем селекторы по которым надо будет вносить изменени в разметку и запишем их в DOM strings
2) В модели создаю метод budgetCtrl.getBudget() который будет возвращать объект с бюджетом
3) В контроллере запускаю его и получаю из него объект с бюджетом
4) В контроллере запускаю ф-ю из UI которая будет обновлять в разметке данные по бюджету uiCtrl.updateBudget();
5) Создаю и описываю метод uiCtrl.updateBudget();
6) Также запускаем метод uiCtrl.updateBudget(); при инициализации приложения передавая в него объект нужной структуры но с нолями и правлю значения в разметке на ноли